const TelegramBot = require('node-telegram-bot-api')
const groups = require('./groups')
const participants = require('./participants')
const pairs = require('./pairs')
const { startScheduler } = require('./scheduler')

const TOKEN = 'BOT TOKEN'
const bot = new TelegramBot(TOKEN, { polling: true })

bot.setMyCommands([
    { command: "start", description: "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø—Ä–∞–≤–∫–∞" },
    { command: "help", description: "üìï –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã" }
])

function getHelpText() {
    return `
<b>üìç –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>

‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±–∏—Ä–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ —Å–µ–±—è)
‚Ä¢ –ö–∞–∂–¥—ã–µ 2 –Ω–µ–¥–µ–ª–∏ (–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 10:00 –ø–æ –ú–∏–Ω—Å–∫—É) –±–æ—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–∞—Ä—ã –¥–ª—è –∫–æ—Ñ–µ-–ø–∞—É–∑—ã –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –∏—Ö –≤ —á–∞—Ç–µ

<b>‚öôÔ∏è –ü–æ–ª–µ–∑–Ω–æ –∑–Ω–∞—Ç—å:</b>
‚Äî –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∂–µ—Ä–µ–±—å—ë–≤–∫—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ –≥—Ä—É–ø–ø—É
‚Äî –ë–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –ø–∞—Ä—ã –¥—Ä—É–≥–∏—Ö –±–æ—Ç–æ–≤ –∏ —Å–∞–º–æ–≥–æ —Å–µ–±—è
‚Äî –ú–æ–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –∏—Å–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–º. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∏–∂–µ)

<b>‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ</b>

<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä—É—á–Ω–æ–º—É –∏—Å–∫–ª—é—á–µ–Ω–∏—é –∏ –≤–æ–∑–≤—Ä–∞—Ç—É:</b>
<code>/exclude @username</code> ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
<code>/include @username</code> ‚Äî –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  

–ü—Ä–∏–º–µ—Ä: <code>/exclude @username</code>
    `.trim()
}

function getHelpKeyboard() {
    return {
        inline_keyboard: [
            [{ text: "‚òïÔ∏è Pairs ‚Äî –≤—Ä—É—á–Ω—É—é –∑–∞–ø—É—Å—Ç–∏—Ç—å –∂–µ—Ä–µ–±—å—ë–≤–∫—É", callback_data: "show_pairs" }],
            [{ text: "üë• Status ‚Äî —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö", callback_data: "show_status" }],
            [{ text: "üß∑ Help ‚Äî –º–µ–Ω—é –∫–æ–º–∞–Ω–¥", callback_data: "show_help" }],
            [{ text: "üëã Start ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º", callback_data: "show_start" }]
        ]
    }
}

bot.onText(/\/start/, (msg) => {
    const text = `
üëã <b>–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ—Ñ–µ-–∂–µ—Ä–µ–±—å—ë–≤–æ–∫.</b>

‚òïÔ∏è –Ø —Ä–∞–∑ –≤ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ —Å–ª—É—á–∞–π–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –ø–∞—Ä–∞–º (–∏–ª–∏ —Ç—Ä–æ–π–∫–∞–º) –¥–ª—è –∫–æ—Ñ–µ-–ø–∞—É–∑.

–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∂–µ—Ä–µ–±—å—ë–≤–∫—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ —ç—Ç–æ—Ç —á–∞—Ç.

<b>–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚Äî /help</b>
    `
    bot.sendMessage(msg.chat.id, text, { parse_mode: "HTML" })
})

bot.onText(/\/(menu|help)/, (msg) => {
    const chatId = msg.chat.id
    bot.sendMessage(chatId, getHelpText(), {
        parse_mode: "HTML",
        reply_markup: getHelpKeyboard()
    })
})

bot.onText(/\/status|\/list/, (msg) => {
    const data = participants.loadUsers()
    const active = (data.users || [])
        .filter(u => u && u.id && !data.excluded.includes(u.id))
        .map(u => u.username ? '@' + u.username : 'id' + u.id)
        .join(', ') || '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
    const excluded = (data.users || [])
        .filter(u => u && u.id && data.excluded.includes(u.id))
        .map(u => u.username ? '@' + u.username : 'id' + u.id)
        .join(', ') || '–ù–µ—Ç –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'

    const text = `<b>–°—Ç–∞—Ç—É—Å –∂–µ—Ä–µ–±—å—ë–≤–∫–∏:</b>

<b>üë• –ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
${active}

<b>üö´ –ò—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ:</b>
${excluded}`
    bot.sendMessage(msg.chat.id, text, { parse_mode: "HTML" })
})

bot.on('message', (msg) => {
    if ((msg.chat.type === 'supergroup' || msg.chat.type === 'group')) {
        groups.addGroup(msg.chat.id)
        if (msg.from && !msg.from.is_bot) {
            participants.addUser(msg.from)
        }
    }
})

bot.on('new_chat_members', (msg) => {
    groups.addGroup(msg.chat.id)
    msg.new_chat_members.forEach(user => {
        if (!user.is_bot) {
            participants.addUser(user)
            bot.sendMessage(msg.chat.id, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @${user.username || user.first_name}!`)
        }
    })
})

bot.on('left_chat_member', (msg) => {
    if (msg.left_chat_member && msg.left_chat_member.is_bot) {
        groups.removeGroup(msg.chat.id)
    } else if (msg.left_chat_member && !msg.left_chat_member.is_bot) {
        participants.removeUser(msg.left_chat_member.id)
    }
})

function sendPairsToChat(chatId) {
    const all = participants.loadUsers()
    const botId = bot.botInfo && bot.botInfo.id ? bot.botInfo.id : null
    const active = (all.users || [])
        .filter(u =>
            u && u.id &&
            !all.excluded.includes(u.id) &&
            (!botId || u.id !== botId) &&
            !u.is_bot
        )

    if (active.length < 2) {
        bot.sendMessage(chatId, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∂–µ—Ä–µ–±—å—ë–≤–∫–∏!')
        return
    }

    const text = pairs.formatPairsMessage(pairs.generatePairs(active))
    bot.sendMessage(chatId, text)
}

startScheduler(sendPairsToChat)

bot.onText(/\/pairs/, (msg) => {
    sendPairsToChat(msg.chat.id)
})

bot.onText(/\/exclude (.+)/, (msg, match) => {
    const chatId = msg.chat.id
    const username = match[1].replace('@', '').trim()
    if (participants.excludeUserByUsername(username)) {
        bot.sendMessage(chatId, `üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} –≤—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –∂–µ—Ä–µ–±—å—ë–≤–∫–∏.`)
    } else {
        bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} –Ω–µ –ø—Ä–æ—è–≤–ª—è–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–ª–∏ –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω.`)
    }
})

bot.onText(/\/include (.+)/, (msg, match) => {
    const chatId = msg.chat.id
    const username = match[1].replace('@', '').trim()
    if (participants.includeUserByUsername(username)) {
        bot.sendMessage(chatId, `üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} –≤–æ–∑–≤—Ä–∞—â—ë–Ω –≤ –∂–µ—Ä–µ–±—å—ë–≤–∫—É!`)
    } else {
        bot.sendMessage(chatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${username} –Ω–µ –ø—Ä–æ—è–≤–ª—è–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–ª–∏ –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω.`)
    }
})

bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id

    if (query.data === 'show_pairs') {
        sendPairsToChat(chatId)
        bot.answerCallbackQuery(query.id, { text: '–ü–∞—Ä—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã!' })
    }
    if (query.data === 'show_status') {
        const data = participants.loadUsers()
        const active = (data.users || [])
            .filter(u => u && u.id && !data.excluded.includes(u.id))
            .map(u => u.username ? '@' + u.username : 'id' + u.id)
            .join(', ') || '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
        const excluded = (data.users || [])
            .filter(u => u && u.id && data.excluded.includes(u.id))
            .map(u => u.username ? '@' + u.username : 'id' + u.id)
            .join(', ') || '–ù–µ—Ç –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'

        const text = `<b>–°—Ç–∞—Ç—É—Å –∂–µ—Ä–µ–±—å—ë–≤–∫–∏:</b>

<b>üë• –ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
${active}

<b>üö´ –ò—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ:</b>
${excluded}`
        bot.sendMessage(chatId, text, { parse_mode: "HTML" })
        bot.answerCallbackQuery(query.id)
    }
    if (query.data === 'show_help') {
        bot.sendMessage(chatId, getHelpText(), {
            parse_mode: "HTML",
            reply_markup: getHelpKeyboard()
        })
        bot.answerCallbackQuery(query.id)
    }
    if (query.data === 'show_start') {
        const text = `
üëã <b>–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ—Ñ–µ-–∂–µ—Ä–µ–±—å—ë–≤–æ–∫.</b>

‚òïÔ∏è –Ø —Ä–∞–∑ –≤ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ —Å–ª—É—á–∞–π–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –ø–∞—Ä–∞–º (–∏–ª–∏ —Ç—Ä–æ–π–∫–∞–º) –¥–ª—è –∫–æ—Ñ–µ-–ø–∞—É–∑.

–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –∂–µ—Ä–µ–±—å—ë–≤–∫—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –≤ —ç—Ç–æ—Ç —á–∞—Ç.

<b>–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚Äî /help</b>
        `
        bot.sendMessage(chatId, text, { parse_mode: "HTML" })
        bot.answerCallbackQuery(query.id)
    }
})

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—ã!')